{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor for adding auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor for handling errors\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  // Handle 401 unauthorized errors\n  if (error.response && error.response.status === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API calls\nexport const signup = async userData => {\n  try {\n    const response = await api.post('/signup', userData);\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : {\n      error: 'Network error'\n    };\n  }\n};\nexport const login = async credentials => {\n  try {\n    const response = await api.post('/login', credentials);\n    const {\n      token,\n      user\n    } = response.data;\n\n    // Store token in localStorage\n    localStorage.setItem('token', token);\n    return {\n      token,\n      user\n    };\n  } catch (error) {\n    throw error.response ? error.response.data : {\n      error: 'Network error'\n    };\n  }\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n};\nexport const isAuthenticated = () => {\n  return localStorage.getItem('token') !== null;\n};\n\n// User API calls\nexport const getCurrentUser = async () => {\n  try {\n    const response = await api.get('/me');\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : {\n      error: 'Network error'\n    };\n  }\n};\nexport const updateProfile = async profileData => {\n  try {\n    const response = await api.put('/profile', profileData);\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : {\n      error: 'Network error'\n    };\n  }\n};\n\n// Image utility function\nexport const getImageUrl = (role, id) => {\n  if (!role || !id) {\n    return role === 'mentor' ? 'https://placehold.co/500x500.jpg?text=MENTOR' : 'https://placehold.co/500x500.jpg?text=MENTEE';\n  }\n  return `http://localhost:8080/api/images/${role}/${id}`;\n};\n\n// Mentor API calls\nexport const getMentors = async (skill, orderBy) => {\n  try {\n    let url = '/mentors';\n    const params = new URLSearchParams();\n    if (skill) {\n      params.append('skill', skill);\n    }\n    if (orderBy) {\n      params.append('order_by', orderBy);\n    }\n    if (params.toString()) {\n      url += `?${params.toString()}`;\n    }\n    const response = await api.get(url);\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : {\n      error: 'Network error'\n    };\n  }\n};\n\n// Match Request API calls\nexport const createMatchRequest = async requestData => {\n  try {\n    const response = await api.post('/match-requests', requestData);\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : {\n      error: 'Network error'\n    };\n  }\n};\nexport const getIncomingMatchRequests = async () => {\n  try {\n    const response = await api.get('/match-requests/incoming');\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : {\n      error: 'Network error'\n    };\n  }\n};\nexport const getOutgoingMatchRequests = async () => {\n  try {\n    const response = await api.get('/match-requests/outgoing');\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : {\n      error: 'Network error'\n    };\n  }\n};\nexport const acceptMatchRequest = async requestId => {\n  try {\n    const response = await api.put(`/match-requests/${requestId}/accept`);\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : {\n      error: 'Network error'\n    };\n  }\n};\nexport const rejectMatchRequest = async requestId => {\n  try {\n    const response = await api.put(`/match-requests/${requestId}/reject`);\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : {\n      error: 'Network error'\n    };\n  }\n};\nexport const cancelMatchRequest = async requestId => {\n  try {\n    const response = await api.delete(`/match-requests/${requestId}`);\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : {\n      error: 'Network error'\n    };\n  }\n};\n\n// File to base64\nexport const fileToBase64 = file => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n};\n\n// Token parsing (for getting user info from JWT without backend call)\nexport const parseJwt = token => {\n  try {\n    return JSON.parse(atob(token.split('.')[1]));\n  } catch (e) {\n    return null;\n  }\n};\nexport const getUserRoleFromToken = () => {\n  const token = localStorage.getItem('token');\n  if (!token) return null;\n  const decoded = parseJwt(token);\n  return decoded ? decoded.role : null;\n};","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","response","status","removeItem","window","location","href","signup","userData","post","data","login","credentials","user","setItem","logout","isAuthenticated","getCurrentUser","get","updateProfile","profileData","put","getImageUrl","role","id","getMentors","skill","orderBy","url","params","URLSearchParams","append","toString","createMatchRequest","requestData","getIncomingMatchRequests","getOutgoingMatchRequests","acceptMatchRequest","requestId","rejectMatchRequest","cancelMatchRequest","delete","fileToBase64","file","resolve","reader","FileReader","readAsDataURL","onload","result","onerror","parseJwt","JSON","parse","atob","split","e","getUserRoleFromToken","decoded"],"sources":["/Users/hyemin/lipcoding/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor for adding auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor for handling errors\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    // Handle 401 unauthorized errors\n    if (error.response && error.response.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API calls\nexport const signup = async (userData) => {\n  try {\n    const response = await api.post('/signup', userData);\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : { error: 'Network error' };\n  }\n};\n\nexport const login = async (credentials) => {\n  try {\n    const response = await api.post('/login', credentials);\n    const { token, user } = response.data;\n    \n    // Store token in localStorage\n    localStorage.setItem('token', token);\n    \n    return { token, user };\n  } catch (error) {\n    throw error.response ? error.response.data : { error: 'Network error' };\n  }\n};\n\nexport const logout = () => {\n  localStorage.removeItem('token');\n};\n\nexport const isAuthenticated = () => {\n  return localStorage.getItem('token') !== null;\n};\n\n// User API calls\nexport const getCurrentUser = async () => {\n  try {\n    const response = await api.get('/me');\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : { error: 'Network error' };\n  }\n};\n\nexport const updateProfile = async (profileData) => {\n  try {\n    const response = await api.put('/profile', profileData);\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : { error: 'Network error' };\n  }\n};\n\n// Image utility function\nexport const getImageUrl = (role, id) => {\n  if (!role || !id) {\n    return role === 'mentor'\n      ? 'https://placehold.co/500x500.jpg?text=MENTOR'\n      : 'https://placehold.co/500x500.jpg?text=MENTEE';\n  }\n  return `http://localhost:8080/api/images/${role}/${id}`;\n};\n\n// Mentor API calls\nexport const getMentors = async (skill, orderBy) => {\n  try {\n    let url = '/mentors';\n    const params = new URLSearchParams();\n    \n    if (skill) {\n      params.append('skill', skill);\n    }\n    \n    if (orderBy) {\n      params.append('order_by', orderBy);\n    }\n    \n    if (params.toString()) {\n      url += `?${params.toString()}`;\n    }\n    \n    const response = await api.get(url);\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : { error: 'Network error' };\n  }\n};\n\n// Match Request API calls\nexport const createMatchRequest = async (requestData) => {\n  try {\n    const response = await api.post('/match-requests', requestData);\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : { error: 'Network error' };\n  }\n};\n\nexport const getIncomingMatchRequests = async () => {\n  try {\n    const response = await api.get('/match-requests/incoming');\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : { error: 'Network error' };\n  }\n};\n\nexport const getOutgoingMatchRequests = async () => {\n  try {\n    const response = await api.get('/match-requests/outgoing');\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : { error: 'Network error' };\n  }\n};\n\nexport const acceptMatchRequest = async (requestId) => {\n  try {\n    const response = await api.put(`/match-requests/${requestId}/accept`);\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : { error: 'Network error' };\n  }\n};\n\nexport const rejectMatchRequest = async (requestId) => {\n  try {\n    const response = await api.put(`/match-requests/${requestId}/reject`);\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : { error: 'Network error' };\n  }\n};\n\nexport const cancelMatchRequest = async (requestId) => {\n  try {\n    const response = await api.delete(`/match-requests/${requestId}`);\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : { error: 'Network error' };\n  }\n};\n\n// File to base64\nexport const fileToBase64 = (file) => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = (error) => reject(error);\n  });\n};\n\n// Token parsing (for getting user info from JWT without backend call)\nexport const parseJwt = (token) => {\n  try {\n    return JSON.parse(atob(token.split('.')[1]));\n  } catch (e) {\n    return null;\n  }\n};\n\nexport const getUserRoleFromToken = () => {\n  const token = localStorage.getItem('token');\n  if (!token) return null;\n  \n  const decoded = parseJwt(token);\n  return decoded ? decoded.role : null;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}