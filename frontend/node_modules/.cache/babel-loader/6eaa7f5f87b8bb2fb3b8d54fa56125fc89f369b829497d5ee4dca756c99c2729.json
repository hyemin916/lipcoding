{"ast":null,"code":"import axios from 'axios';\n\n// Axios 인스턴스 생성 및 JWT 자동 첨부\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:8080/api'\n});\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Auth API calls\nexport const signup = async userData => {\n  try {\n    const response = await axiosInstance.post('/signup', userData);\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : {\n      error: 'Network error'\n    };\n  }\n};\nexport const login = async credentials => {\n  try {\n    const response = await axiosInstance.post('/login', credentials);\n    const {\n      token,\n      user\n    } = response.data;\n\n    // Store token in localStorage\n    localStorage.setItem('token', token);\n    return {\n      token,\n      user\n    };\n  } catch (error) {\n    throw error.response ? error.response.data : {\n      error: 'Network error'\n    };\n  }\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n};\nexport const isAuthenticated = () => {\n  return localStorage.getItem('token') !== null;\n};\n\n// User API calls\nexport const getCurrentUser = async () => {\n  try {\n    const response = await axiosInstance.get('/me');\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : {\n      error: 'Network error'\n    };\n  }\n};\nexport const updateProfile = async profileData => {\n  try {\n    const response = await axiosInstance.put('/profile', profileData);\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : {\n      error: 'Network error'\n    };\n  }\n};\n\n// Image utility function\nexport const getImageUrl = (role, id) => {\n  if (!role || !id) {\n    return role === 'mentor' ? 'https://placehold.co/500x500.jpg?text=MENTOR' : 'https://placehold.co/500x500.jpg?text=MENTEE';\n  }\n  return `http://localhost:8080/api/images/${role}/${id}`;\n};\n\n// Mentor API calls\nexport const getMentors = async (skill, orderBy) => {\n  try {\n    const response = await axiosInstance.get('/mentors', {\n      params: {\n        skill,\n        orderBy\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : {\n      error: 'Network error'\n    };\n  }\n};\n\n// Match Request API calls\nexport const createMatchRequest = async requestData => {\n  try {\n    const response = await axiosInstance.post('/match-requests', requestData);\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : {\n      error: 'Network error'\n    };\n  }\n};\nexport const getIncomingMatchRequests = async () => {\n  try {\n    const response = await axiosInstance.get('/match-requests/incoming');\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : {\n      error: 'Network error'\n    };\n  }\n};\nexport const getOutgoingMatchRequests = async () => {\n  try {\n    const response = await axiosInstance.get('/match-requests/outgoing');\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : {\n      error: 'Network error'\n    };\n  }\n};\nexport const acceptMatchRequest = async requestId => {\n  try {\n    const response = await axiosInstance.put(`/match-requests/${requestId}/accept`);\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : {\n      error: 'Network error'\n    };\n  }\n};\nexport const rejectMatchRequest = async requestId => {\n  try {\n    const response = await axiosInstance.put(`/match-requests/${requestId}/reject`);\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : {\n      error: 'Network error'\n    };\n  }\n};\nexport const cancelMatchRequest = async requestId => {\n  try {\n    const response = await axiosInstance.delete(`/match-requests/${requestId}`);\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : {\n      error: 'Network error'\n    };\n  }\n};\n\n// File to base64\nexport const fileToBase64 = file => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n};\n\n// Token parsing (for getting user info from JWT without backend call)\nexport const parseJwt = token => {\n  try {\n    return JSON.parse(atob(token.split('.')[1]));\n  } catch (e) {\n    return null;\n  }\n};\nexport const getUserRoleFromToken = () => {\n  const token = localStorage.getItem('token');\n  if (!token) return null;\n  const decoded = parseJwt(token);\n  return decoded ? decoded.role : null;\n};","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","signup","userData","response","post","data","error","login","credentials","user","setItem","logout","removeItem","isAuthenticated","getCurrentUser","get","updateProfile","profileData","put","getImageUrl","role","id","getMentors","skill","orderBy","params","createMatchRequest","requestData","getIncomingMatchRequests","getOutgoingMatchRequests","acceptMatchRequest","requestId","rejectMatchRequest","cancelMatchRequest","delete","fileToBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","parseJwt","JSON","parse","atob","split","e","getUserRoleFromToken","decoded"],"sources":["/Users/hyemin/lipcoding/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Axios 인스턴스 생성 및 JWT 자동 첨부\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:8080/api',\n});\n\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Auth API calls\nexport const signup = async (userData) => {\n  try {\n    const response = await axiosInstance.post('/signup', userData);\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : { error: 'Network error' };\n  }\n};\n\nexport const login = async (credentials) => {\n  try {\n    const response = await axiosInstance.post('/login', credentials);\n    const { token, user } = response.data;\n    \n    // Store token in localStorage\n    localStorage.setItem('token', token);\n    \n    return { token, user };\n  } catch (error) {\n    throw error.response ? error.response.data : { error: 'Network error' };\n  }\n};\n\nexport const logout = () => {\n  localStorage.removeItem('token');\n};\n\nexport const isAuthenticated = () => {\n  return localStorage.getItem('token') !== null;\n};\n\n// User API calls\nexport const getCurrentUser = async () => {\n  try {\n    const response = await axiosInstance.get('/me');\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : { error: 'Network error' };\n  }\n};\n\nexport const updateProfile = async (profileData) => {\n  try {\n    const response = await axiosInstance.put('/profile', profileData);\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : { error: 'Network error' };\n  }\n};\n\n// Image utility function\nexport const getImageUrl = (role, id) => {\n  if (!role || !id) {\n    return role === 'mentor'\n      ? 'https://placehold.co/500x500.jpg?text=MENTOR'\n      : 'https://placehold.co/500x500.jpg?text=MENTEE';\n  }\n  return `http://localhost:8080/api/images/${role}/${id}`;\n};\n\n// Mentor API calls\nexport const getMentors = async (skill, orderBy) => {\n  try {\n    const response = await axiosInstance.get('/mentors', { params: { skill, orderBy } });\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : { error: 'Network error' };\n  }\n};\n\n// Match Request API calls\nexport const createMatchRequest = async (requestData) => {\n  try {\n    const response = await axiosInstance.post('/match-requests', requestData);\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : { error: 'Network error' };\n  }\n};\n\nexport const getIncomingMatchRequests = async () => {\n  try {\n    const response = await axiosInstance.get('/match-requests/incoming');\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : { error: 'Network error' };\n  }\n};\n\nexport const getOutgoingMatchRequests = async () => {\n  try {\n    const response = await axiosInstance.get('/match-requests/outgoing');\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : { error: 'Network error' };\n  }\n};\n\nexport const acceptMatchRequest = async (requestId) => {\n  try {\n    const response = await axiosInstance.put(`/match-requests/${requestId}/accept`);\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : { error: 'Network error' };\n  }\n};\n\nexport const rejectMatchRequest = async (requestId) => {\n  try {\n    const response = await axiosInstance.put(`/match-requests/${requestId}/reject`);\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : { error: 'Network error' };\n  }\n};\n\nexport const cancelMatchRequest = async (requestId) => {\n  try {\n    const response = await axiosInstance.delete(`/match-requests/${requestId}`);\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : { error: 'Network error' };\n  }\n};\n\n// File to base64\nexport const fileToBase64 = (file) => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = (error) => reject(error);\n  });\n};\n\n// Token parsing (for getting user info from JWT without backend call)\nexport const parseJwt = (token) => {\n  try {\n    return JSON.parse(atob(token.split('.')[1]));\n  } catch (e) {\n    return null;\n  }\n};\n\nexport const getUserRoleFromToken = () => {\n  const token = localStorage.getItem('token');\n  if (!token) return null;\n  \n  const decoded = parseJwt(token);\n  return decoded ? decoded.role : null;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}